@use '../abstracts' as *;
@use './button' as btn;

.products-container {
  @include elementDisplay(flex);
  gap: 1rem;
  @include elementSpacing(padding, y, 4);
  @include elementSpacing(padding, x, 6);
}

.product-list {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

.product {
  position: relative;
  cursor: pointer;
  width: 300px;
  min-height: 200px;
  border: 1px solid $gray-light;
  @include elementDisplay(flex);
  flex-direction: column;
  gap: 1rem;
  @include borderRadius(xl);
  @include elementSpacing(padding, x, 6);
  @include elementSpacing(padding, y, 6);

  &__image {
    height: 300px;
    width: auto;
  }

  &__title {
    @include elementDisplay(inline-block);
  }

  &__action {
    @include elementDisplay(flex);
    @include justifyContent(between);

    button {
      @include btn.baseButton();
      @include borderRadius(full);
      min-width: 100px;
    }
  }

  &__sold-out {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba($gray-base, 0.7);
    opacity: 70;
    @include elementDisplay(flex);
    flex-direction: column;
    @include borderRadius(xl);
  }

  &:hover {
    .product__sold-out {
      display: none;
    }
  }
}

.product-rating {
  display: inline-flex;
  gap: 1rem;
  @include alignItems(center);

  &__stars {
    display: inline-flex;
    gap: 0.25rem;
  }
}

.product-filter {
  @include elementDisplay(flex);
  flex-direction: column;
  gap: 1rem;
  border: 1px solid $gray-dark;
  @include borderRadius(sm);
  height: fit-content;
  @include elementSpacing(padding, y, 3);
  @include elementSpacing(padding, x, 4);

  &__toggle {
    @include btn.toggleButton();
  }

  &__items {
    flex-direction: column;
    gap: 0.5rem;
    display: none;

    &--active {
      @include elementDisplay(flex);
    }
  }

  &__item {
    @include elementDisplay(inline-flex);
    @include alignItems(center);
    gap: 0.5rem;
    cursor: pointer;

    input {
      cursor: pointer;
    }
  }
}
